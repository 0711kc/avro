name: Send PR to MSA services on avro update

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  send-prs:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout avro repo
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | \
            sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] \
            https://cli.github.com/packages stable main" | \
            sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y

      - name: Debug working directory and check services.json
        run: |
          echo "== Current Directory =="
          pwd
          echo "== File List =="
          ls -al
          echo "== Root File List =="
          ls -al $GITHUB_WORKSPACE
          echo "== services.json =="
          cat $GITHUB_WORKSPACE/services.json || echo "services.json not found"

      - name: Read and iterate over services
        run: |
          # 서비스 목록을 읽어오기
          jq -r '.[]' $GITHUB_WORKSPACE/services.json | while read repo; do
            echo "Processing $repo"
            owner=$(echo $repo | cut -d'/' -f1)
            name=$(echo $repo | cut -d'/' -f2)
            repo_dir="${owner}_${name}"
            branch_name="update-avro-$(date +%s)"

            # 기존 디렉토리 삭제
            [ -d "$repo_dir" ] && rm -rf "$repo_dir"

            # Clone 대상 서비스 레포
            git clone --depth=1 https://x-access-token:${GH_TOKEN}@github.com/$repo.git "$repo_dir"
            cd $repo_dir

            git config user.name "avro-bot"
            git config user.email "avro-bot@example.com"

            # main 브랜치 기준 새 브랜치 생성
            git checkout -b $branch_name origin/main

            # 서브모듈 초기화 및 업데이트
            git submodule update --init
            git -C src/main/avro fetch
            git -C src/main/avro checkout main

            git add src/main/avro
            git commit -m "chore: update avro submodule to latest" || echo "No changes"
            git push origin $branch_name

            # PR 생성
            gh pr create \
              --title "chore: update avro submodule" \
              --body "자동화된 PR입니다. avro 최신 커밋으로 반영." \
              --head $branch_name \
              --base main || echo "PR already exists"

            cd ..
          done